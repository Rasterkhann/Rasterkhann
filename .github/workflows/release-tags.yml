name: Release New Tags

on:
  push:
    tags:
      - 'v*' # Any pushed tag

jobs:
  build:
    name: Create Release

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - run: npm install

    - run: npm run lint
      
    - run: npm run build:electron:full:demo

    - run: npm run changelog:generate:current

    - name: Store Changelog in ENV
      run: echo "::set-env name=CHANGELOG_DATA::${cat CHANGELOG_current.md | sed 's/\n/%0A/g'}"

    - name: Store Version in ENV
      run: echo "::set-env name=VERSION_DATA::${git describe --abbrev=0}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ env.CHANGELOG_DATA }}
        draft: false
        prerelease: false

    - name: Post to Reddit
      uses: bluwy/release-for-reddit-action@v1
      with:
        username: ${{ secrets.REDDIT_USERNAME }}
        password: ${{ secrets.REDDIT_PASSWORD }}
        app-id: ${{ secrets.REDDIT_APP_ID }}
        app-secret: ${{ secrets.REDDIT_APP_SECRET }}
        subreddit: Rasterkhann ${{ env.VERSION_DATA }}
        comment: ${{ env.CHANGELOG_DATA }}
      
    - name: Upload Release Asset (Github-Windows)
      id: upload-release-asset-win
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Rasterkhann.exe
        asset_name: Rasterkhann.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    #- name: Upload Release Asset (Itch-Windows)
    #  uses: josephbmanley/butler-publish-itchio-action@master
    #  env:
    #    BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
    #    CHANNEL: windows
    #    ITCH_GAME: rasterkhann
    #    ITCH_USER: seiyria
    #    VERSION: ${{ github.ref }}
    #    PACKAGE: ./dist/Rasterkhann.exe
      
    #- name: Upload Release Asset (OSX)
    #  id: upload-release-asset-osx
    #  if: startsWith(matrix.os, 'macos')
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ./build/bin/osx.zip
    #    asset_name: osx.zip
    #    asset_content_type: application/zip
      
    #- name: Upload Release Asset (Linux)
    #  id: upload-release-asset-linux
    #  if: startsWith(matrix.os, 'linux')
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ./build/bin/linux.zip
    #    asset_name: linux.zip
    #    asset_content_type: application/zip